openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Bankin bridgeapi.io server
    url: https://sync.bankin.com/v2
info:
  description: bridgeapi.io
  version: "1.0.0"
  title: Bridge API
paths:
  /users:
    post:
      summary: Create a User
      operationId: createUser
      security:
      - ClientId:     []
        ClientSecret: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyBody'
        required: false
      parameters:
        - in: query
          name: email
          description: User's email address.
          required: true
          schema:
            type: string
        - in: query
          name: password
          description: |
            User's password.
            Must be at least 6 characters and less than 255 characters.
          required: true
          schema:
            type: string
            minLength: 6
            maxLength: 255

      responses:
        '200':
          description: created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete all users
      operationId: deleteAllUsers
      security:
      - ClientId:     []
        ClientSecret: []
      responses:
        '204':
          description: successful deletion
    get:
      summary: List users
      operationId: listUsers
      security:
      - ClientId:     []
        ClientSecret: []
      responses:
        '200':
          description: paginated list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
  /users/{uuid}:
    put:
      summary: edit User credentials
      operationId: editUser
      security:
      - ClientId:     []
        ClientSecret: []
      parameters:
        - in: query
          required: true
          name: current_password
          schema:
            type: string
        - in: query
          required: true
          name: new_password
          schema:
            type: string
      responses:
        '200':
          description: edit User credentials response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editUserCredentialsResponse'
    delete:
      summary: delete a User
      operationId: deleteUser
      security:
      - ClientId:     []
        ClientSecret: []
      parameters:
        - in: query
          required: true
          name: password
          schema:
            type: string
      responses:
        '204':
          description: delete User credentials response
  /users/me/email/confirmation:
    get:
      summary: check Email Validation
      operationId: checkEmailValidation
      security:
      - ClientId:     []
        ClientSecret: []
      responses:
        '200':
          description: check Email Validation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  is_confirmed:
                    type: boolean
  /connect/users/email/confirmation/url:
    get:
      summary: get the URL for email validation
      operationId: getEmailValidationUrl
      security:
      - ClientId:     []
        ClientSecret: []
      responses:
        '200':
          description: email Validation Url response
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    type: string
  /banks:
    get:
      summary: get All banks
      operationId: getAllBanks
      security:
      - ClientId:     []
        ClientSecret: []
      responses:
        '200':
          description: Paginated list of banks
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref : '#/components/schemas/ParentBanks'
                  pagination:
                    type: object
                    properties:
                      previous_uri:
                        type: string
                      next_uri:
                        type: string
  /connect/items/add/url:
    get:
      summary: Returns the URL to Bridge's Connect funnel for adding an item
      operationId: connect
      security:
      - ClientId:     []
        ClientSecret: []
        Authorization: []
      responses:
        '200':
          description: the redirect_url
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    type: string
  /authenticate:
    post:
      summary: Authenticate a User
      operationId: authenticateUser
      security:
        - ClientId:     []
          ClientSecret: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyBody'
      parameters:
        - name: email
          in: query
          description: User's email address.
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: |
            User's password.
            Must be at least 6 characters and less than 255 characters.
          required: true
          schema:
            type: string
            minLength: 6
            maxLength: 255
      responses:
        '200':
          description: authenticated User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatedUser'
  /accounts/{id}:
    get:
      summary: get User Account
      operationId: getAccount
      security:
      - ClientId:     []
        ClientSecret: []
        Authorization: []
      parameters:
      - name: id
        description: accountId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /accounts:
    get:
      summary: get User Accounts
      operationId: getAccounts
      security:
      - ClientId:     []
        ClientSecret: []
        Authorization: []
      responses:
        '200':
          description: list of account resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResources'

components:
  securitySchemes:
    ClientId:
      type: apiKey
      in: query
      name: client_id
    ClientSecret:
      type: apiKey
      in: query
      name: client_secret
    Authorization:
      type: apiKey
      in: header
      name: authorization
  schemas:
    editUserCredentialsResponses:
      allOf:
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              example: 79c8961c-bdf7-11e5-88a3-4f2c2aec0665
            email:
              type: string
        - $ref: '#/components/schemas/Response'
    AccountResources:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    Account:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            id:
              type: integer
            name:
              type: string
            balance:
              type: integer
            status:
              type: integer
            item:
              $ref: '#/components/schemas/Resource'
            bank:
              $ref: '#/components/schemas/Resource'
            last_refresh_date:
              type: string
              format: date-time
            loan_details:
              $ref: '#/components/schemas/LoanDetails'
            saving_details:
          $ref: '#/components/schemas/SavingDetails'
    SavingsDetails:
      type: object
      properties:
        opening_date:
          type: string
          format: date
        interest_rate:
          type: double
        ceiling:
          type: double
    LoanDetails:
      type: object
      properties:
        next_payment_date:
          type: string
          format: date
        next_payment_amount:
          type: integer
        maturity_date:
          type: string
          format: date
        opening_date:
          type: string
          format: date
        interest_rate:
          type: double
        type:
          type: string
        borrowed_capital:
          type: integer
        repaid_capital:
          type: integer
        remaining_capital:
          type: integer
    Resource:
      type: object
      properties:
        resource_type:
          type: string
        resource_url:
          type: string
    Pagination:
      type: object
      properties:
        previous_uri:
          type: string
        next_uri:
          type: string
    AuthenticatedUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        access_token:
          type: string
        expires_at:
          type: string
          format: datetime
          example: "2016-05-06T11:08:25.040Z"
    User:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              example: 79c8961c-bdf7-11e5-88a3-4f2c2aec0665
            email:
              type: string
              example: john.doe@email.com
    BankCountry:
      type: object
      properties:
        country_code:
          type: string
        parent_banks:
          type: array
          items:
            $ref: '#/components/schemas/ParentBank'
    ParentBank:
      type: object
      properties:
        name:
          type: string
        logo_url:
          type: string
        banks:
          type: array
          items:
            $ref: '#/components/schemas/Bank'
    Bank:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            id:
              type: integer
            name:
              type: string
            country_code:
              type: string
            automatic_refresh:
              type: boolean
            form:
              type: array
              items:
                $ref: '#/components/schemas/BankForm'
    BankForm:
      type: object
      properties:
        label:
          type: string
          example: 'Numéroclient'
        type:
          type: string
          example: 'USER'
        isNum:
          type: string
        maxLength:
          type: integer
    emptyBody:
      type: object
